generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model admins {
  admin_id       String           @id @db.Uuid
  name           String
  email          String           @unique
  borrow_records borrow_records[]
}

model assets {
  asset_id     String         @id(map: "Items_pkey") @db.Uuid
  asset_name   String
  asset_type   String?
  asset_status String
  category_id  String?        @db.Uuid
  created_at   DateTime?      @db.Timestamptz(6)
  categories   categories?    @relation(fields: [category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "category_id_fkey")
  borrow_items borrow_items[]
}

model borrow_items {
  borrow_item_id String         @id @db.Uuid
  borrow_id      String         @db.Uuid
  asset_id       String         @db.Uuid
  item_status    String?
  return_date    DateTime?      @db.Date
  assets         assets         @relation(fields: [asset_id], references: [asset_id], onDelete: NoAction, onUpdate: NoAction, map: "asset_id_fkey")
  borrow_records borrow_records @relation(fields: [borrow_id], references: [borrow_id], onDelete: NoAction, onUpdate: NoAction, map: "borrow_id_fkey")
}

model borrow_records {
  borrow_id      String         @id @db.Uuid
  borrower_name  String
  borrower_email String?
  borrow_date    DateTime       @db.Timestamptz(6)
  borrow_status  String?
  admin_id       String?        @db.Uuid
  return_date    DateTime?      @db.Timestamptz(6)
  borrower_id    String?
  contact_no     String?
  description    String?
  agreement      Boolean?
  location       String?
  borrow_items   borrow_items[]
  admins         admins?        @relation(fields: [admin_id], references: [admin_id], onDelete: NoAction, onUpdate: NoAction, map: "admin_id_fkey")
}

model categories {
  category_id   String   @id @db.Uuid
  category_name String
  assets        assets[]
}

model property_borrowed_list {
  id             Int    @id
  slug           String @unique
  date           String
  borrowers_name String
  borrowers_id   String
  location       String
  contact_no     String
  items_borrowed String
  description    String
  date_borrowed  String
  return_date    String
  agreement      String
}

model sessions {
  id    Int    @id @default(autoincrement())
  token String @unique
  uid   String @unique
  users users  @relation(fields: [uid], references: [uid], onDelete: Cascade, onUpdate: NoAction, map: "fk_uid")
}

model users {
  id       Int       @id @default(autoincrement())
  uid      String    @unique
  name     String    @unique
  email    String    @unique
  password String
  sessions sessions?
}

model prisma_migrations {
  id             Int       @id @default(autoincrement())
  migration_name String    @db.VarChar(255)
  applied_at     DateTime? @default(now()) @db.Timestamp(6)
}
